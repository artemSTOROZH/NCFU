# Программирование на языке высокого уровня (Python).
# Задание № 4.3.2. Вариант 8
#
# Выполнил: Стороженко А.В.
# Группа: ПИН-б-о-21-1
# E-mail: artem-storozhenko_2016@mail.ru
import time


class Пицца:

    """Класс Пицца содержит общие атрибуты для пиццы.

    Дочерние классы будут их конкретизировать.
    """

    def __init__(self):
        self.название = "Заготовка"
        self.тесто = "тонкое"
        self.соус = "кечтуп"
        self.начинка = []

        self.цена = 0

    def __str__(self):
        """Вернуть информацию о пицце: название, тесто, соус, начинка.

                Формат вывода:

                Пицца: Пепперони | Цена: 350.00 р.
                Тесто: тонкое Соус: томатный
                Начинка: пепперони, сыр моцарелла
                """
        res = ""
        res += f"Пицца: {self.название} | Цена: {self.цена} р.\n"
        res += f"Тесто: {self.тесто}\n"
        res += f"Соус: {self.соус}\n"
        res += f"Начинка: {self.начинка}\n"
        return res

    def подготовить(self):
        """Сообщить о процессе подготовки.

                Формат вывода:

                Начинаю готовить пиццу Пепперони
                  - замешиваю тонкое тесто...
                  - добавляю соус: томатный...
                  - и, конечно: пепперони, сыр моцарелла...
                """
        print(f"Начинаю готовить пиццу {self.название}...")
        time.sleep(0.3)
        print(f"  -замешиваю {self.тесто} тесто...")
        time.sleep(0.3)
        print(f"  -добавляю соус {self.соус}...")
        time.sleep(0.3)
        print("  -и конечно: ", end="")
        for ингридиент in self.начинка:
            time.sleep(0.2)
            if self.начинка.index(ингридиент) != len(self.начинка) - 1:
                print(f"{ингридиент}", end=',')
            else:
                print(f"{ингридиент}")

    def испечь(self):
        """Сообщить о процессе запекания пиццы.

               Формат вывода: произвольное сообщение.
               """
        print(f"Начинаю выпекать пиццу {self.название}... Готово!")

    def нарезать(self):
        """Сообщить о процессе нарезки.

                Формат вывода: произвольное сообщение.
                """
        print("Нарезаю на аппетитные кусочки...")

    def упаковать(self):
        """Сообщить о процессе упаковки.

                Формат вывода: произвольное сообщение.
                """
        print("Упаковываю в фирменную упаковку и готово!")


class ПиццаПепперони(Пицца):

    """Класс ПиццаПепперони дополняет класс Пицца"""

    def __init__(self):
        super().__init__()
        self.цена = 500.00
        self.название = "Пепперони"
        self.начинка = ["пепперони", "моцарелла", "томаты"]


class ПиццаБарбекю(Пицца):

    """Класс ПиццаБарбекю дополняет класс Пицца"""

    def __init__(self):
        self.название = "Барбекю"
        self.цена = 800.00
        self.соус = "барбекю"
        self.тесто = "тонкое"
        self.начинка = ["цыпленок", "бекон", "красный лук", "моцарелла"]


class ПиццаДарыМоря(Пицца):

    """Класс ПиццаДарыМоря дополняет класс Пицца"""

    def __init__(self):
        self.название = "Дары моря"
        self.цена = 740.00
        self.соус = "белый"
        self.тесто = "тонкое"
        self.начинка = ["кальмар", "креветки", "мидии", "моцарелла", "оливки", "болгарский перец", "красный лук"]
